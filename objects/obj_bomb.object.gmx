<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_bomb</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-6</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initialize particle
hups = irandom(1) + 1;
jspd = random_range(-1, -2);
mspd = random_range(-0.5, 0.5);
vspd = jspd;
hspd = 0.0;
grav = 0.3;
used = false;
take = false;
utility  = true;
can_take = true;
boom_del = 18;
sound = true;

image_speed = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>boom_del -= 1;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// be able to take it
can_take = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Particle logic
// Make the particle bounce on the ground
if (place_meeting(x, y + 1, par_fake)) {
    // Check if it is able to hup
    if (hups &gt; 0) {
        jspd -= (jspd * 0.25);
        vspd = jspd; 
        hups--;
    } else {
        vspd = 0;
    }
    // Slow down the motion speed
    mspd += (0 - mspd) * 0.05;
} else {
    // Add gravity
    if (vspd &lt; 7) {
        vspd += grav;
    }
}

if (can_take &amp;&amp; !take) {
    image_alpha = 1;
} else if (!take) {
    image_alpha = 0.50;
}

if (place_meeting(x, y, obj_player) &amp;&amp; can_take) {
    if (!take) {
        inv_pickup(item.bomb, 1);
        
        if (!audio_is_playing(snd_pickup)) {
            audio_emitter_pitch(mainAudio, random_range(0.95, 1.05));
            audio_play_sound_on(mainAudio, snd_pickup, false, 1);
        } else {
            audio_play_sound_on(mainAudio, snd_pickup_n, false, 1);
        }
    }
    take = true;
}

if (!take) {
    // Stop the particle of moving horizontally if collision with a solid
    if (place_meeting(x + hspd, y, par_fake)) {
        mspd = 0;
    }
    
    hspd = mspd;
    
    // Particle built in cfg
    x += hspd;
    
    // Vertical Collisions
    if (place_meeting(x , y + vspd, par_fake)) {
        while (!place_meeting(x, y + sign(vspd), par_fake)) {
            y += sign(vspd);
        }
        vspd = 0;
    }
    
    y += round(vspd);
} else {
    depth = -1001

    x += ((view_xview + 16) - x) * 0.3;
    y += ((view_yview + 50) - y) * 0.3;
    if (x - (view_xview + 16) &lt; 16 &amp;&amp; y - (view_yview + 50) &lt; 16) {
        if (image_alpha &gt; 0) {
            image_alpha -= 0.10;
        } else {
            instance_destroy();
        }
    }
}

if (used) {
    if (sound) {
        sound = false;
        
        audio_emitter_pitch(mainAudio, random_range(0.95, 1.05));
        audio_play_sound_on(mainAudio, snd_put, false, 1);
    }
    can_take = false;
    
    if (!alarm[1]) {
        alarm[1] = boom_del;
        image_index = 1;
    } else {
        image_index = 0;
    }
    
    if (boom_del &lt;= 0) {
        instance_create(x, y, part_explosion);
        effect_init(SCREENSHAKE, 5, 10, 45);
        instance_destroy();
    }
    
    image_angle += -mspd * 2;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite_outlined(sprite_index, image_index, x, y, 1, 1, image_angle, c_white, c_black, 0.50);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
