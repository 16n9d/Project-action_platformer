<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_blood</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-5</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initialize particle
hups = irandom(3) + 1;
jspd = random_range(-2, -6);
mspd = random_range(-3, 3) + 1;
vspd = jspd;
hspd = 0.0;
grav = 0.3;


image_xscale = random_range(0.5, 1);
image_yscale = image_xscale;

image_angle = irandom(360);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Particle logic
// Make the particle bounce on the ground
if (place_meeting(x, y + 1, par_fake)) {
    // Check if it is able to hup
    if (hups &gt; 0) {
        jspd -= (jspd * 0.25);
        vspd = jspd; 
        hups--;
    } else {
        vspd = 0;
    }
    // Slow down the motion speed
    mspd += (0 - mspd) * 0.05;
} else {
    // Add gravity
    if (vspd &lt; 7) {
        vspd += grav;
    }
}

// Stop the particle of moving horizontally if collision with a solid
if (place_meeting(x + 1, y, par_fake)) {
    mspd += (0 - mspd) * 0.25;
}

hspd = mspd;

// If some time has pass destroy the particle with style
if (hspd == 0 &amp;&amp; vspd == 0) {
    image_xscale += (0 - image_xscale) * 0.01;
    image_yscale = image_xscale;
}

if (image_xscale &lt;= 0) instance_destroy();

// Particle built in cfg
x += hspd;
y += vspd;

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
