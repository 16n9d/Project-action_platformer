<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>mask_system</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1005</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initialize Textbox
msg[0] = "Hello, this is a test only to see how the text will fit in all thetextbox :) FUCK";

xx = x;
yy = y;
t    = 0;
done = false;
show = false;

increment = 1;
timer     = 0;
cutoff    = 0;
portrait  = -1;
msg_current = 0;

image_speed = 0.25;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Show the textbox in the screen;
draw_set_font(fnt_game);
draw_set_colour(c_white);

// Check the number or messages in the arrat
msg_end = array_length_1d(msg);

if (instance_exists(obj_player) &amp;&amp; distance_to_object(obj_player) &lt; 48 &amp;&amp; key_act &amp;&amp; !sys_inventory.show) {
    show = true;
} else if (distance_to_object(obj_player) &gt; 64 || !instance_exists(obj_player)) {
    show = false;
    cutoff = 0;
    msg_current = 0;
}

if (msg_end &gt; 0 &amp;&amp; show) {
    // Text Position
    var tx, ty, charWidth, lineEnd, line, space, i, delay;
        charWidth = 11;
        lineEnd   = 30;
        line      = 0;
        space     = 0;
        i         = 1;
        ty = yy - 64;
        
        if (!portrait) {
            tx = xx - 165;
        } else {
            tx = xx + 32;    
        }
        
        if (key_act_press) {
            delay = 0;
        } else {
            delay = 3;
        }
        
    // Typewriter
    if (cutoff &lt; string_length(msg[msg_current])) {
        if (timer &gt;= delay) {
            cutoff++;
            timer = 0;
        } else {
            timer++;
        }
    }
    
    // Draw the text
    while (i &lt;= string_length(msg[msg_current]) &amp;&amp; i &lt;= cutoff) {
        var lenght = 0;
        
        while (string_char_at(msg[msg_current], i) != " " &amp;&amp; i &lt;= string_length(msg[msg_current])) {
            i++;
            lenght++;
        }
        
        if (space + lenght &gt; lineEnd) {
            space = 0;
            line++;
        }
        i -= lenght;
        
        draw_text_outlined(tx + (space * charWidth), ty + (13 * line), string_char_at(msg[msg_current], i), c_white, c_black, 1);
    
        space++;
        i++;
    }
    
    if (portrait) draw_sprite(spr_portrait, portID, tx, ty);
    
    // Next Message
    if (cutoff &gt;= string_length(msg[msg_current])) {
        if (key_act) {
            if (msg_current &lt; (msg_end - 1)) {
                msg_current++;
                cutoff = 0;
            } else {
                show = false;
            }
        }
        
        draw_sprite(spr_text, global.gamepad, x, ty + (13 * (line + 1)));
    }
} else if (!show) {
    cutoff = 0;
    msg_current = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
