<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_selector</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-25000</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initialize variables
xoff = 0;
yoff = 0;
partition = 'inv';
image_speed = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Move this stuff
var dup, ddown, dright, dleft, bleft, bright;
    dup    = gamepad_button_check_pressed(0, gp_padu);
    ddown  = gamepad_button_check_pressed(0, gp_padd);
    dright = gamepad_button_check_pressed(0, gp_padr);
    dleft  = gamepad_button_check_pressed(0, gp_padl);
    
    toggle = gamepad_button_check_pressed(0, gp_select);
    
// Move arround
if (global.gamepad) {
    if (!sys_inventory.show) {
        x += ((sys_inventory.x + 16) - x) * 0.50;
        y += ((sys_inventory.y + 50) - y) * 0.50;
        
        image_alpha += (0 - image_alpha) * 0.95;
    } else {
        image_alpha += (1 - image_alpha) * 0.10;
        if (instance_exists(obj_player)) {
            if (partition == 'inv') {
                image_index = 0;
            
                x += (((sys_inventory.x + 16) + xoff) - x) * 0.50;
                y += (((sys_inventory.y + 50) + yoff) - y) * 0.50;
                        
                if (dup)    yoff -= 34;
                if (ddown)  yoff += 34;
                if (dright) xoff += 34;
                if (dleft)  xoff -= 34;
                
                if (xoff &lt; 0)   xoff = 136
                if (xoff &gt; 136) xoff = 0;
                if (yoff &lt; -34) yoff = 204;
                if (yoff &gt; 204) yoff = -34;
            } else if (partition = 'cfg') {
                image_index = 1;
                
                x += ((view_xview + 90) - x) * 0.50;
                y += (((sys_inventory.y + 10) + yoff) - y) * 0.50;
                                
                if (dup)    yoff -= 50;
                if (ddown)  yoff += 50;
                
                if (yoff &lt; 0) yoff = 200;
                if (yoff &gt; 200) yoff = 0;
            }   
        }
        if (partition = 'cfg') {
            if (toggle) {
                partition = 'inv';
                xoff = 0;
                yoff = 0;
            }
        } else {
            if (toggle) {
                partition = 'cfg';
                xoff = 0;
                yoff = 0;
            }
        }
    }
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw
if (global.gamepad) {
    draw_self();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
