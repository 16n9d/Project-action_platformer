<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_enemy</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>par_enemy</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initialize enemy variables
hspd = 0;
vspd = 0;
grav = 0.3;
mspd = 1.0;
part = part_blood;

hdam  = 10.0;
hp    = 10.0;

hp_max    = 10.0;
hdam_max  = 10.0;
hp_goal   = 10.0;
hdam_goal = 10.0;
dmg_sum   = 0.0;
dmg       = 2.0;


a = 0;
loot    = irandom(2);

image_speed = 0.25;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initializate a lightblock
/*
How to instantiate a lightblocker:
-- First, set the points. You can set how many do you want.
*/
/*
cast_points_x[0] = -16;
cast_points_y[0] = -24;
 
cast_points_x[1] = 16;
cast_points_y[1] = -24;
 
cast_points_x[2] = -16;
cast_points_y[2] = 0;
 
cast_points_x[3] = 16;
cast_points_y[3] = 0;

/*
Calls lightblock create EXTENDED script, and send the id of the object.
With that, the sprite of the enemy will not be painted dark.
*/

//lb = scr_ls_lightblocker_create_ext(x, y, cast_points_x, cast_points_y, id, id);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Comment
image_blend = c_white;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Move the enemy arround
// Add gravity
if (place_meeting(x, y + 1, par_fake)) {
    vspd = 0;
} else {
    if (vspd &lt; 10) {
        vspd += grav;
    }
}

/// Move arround (AI)
if (!place_meeting(x + mspd * 30, y + 1 , par_fake) || place_meeting(x + mspd, y, par_fake)) {
    mspd *= -1;
} else {
    // Get damage
    if (place_meeting(x, y, obj_slash)) {
        hspd += (0 - hspd) * 0.10;
        if (!alarm[0]) {
            image_blend = make_colour_rgb(181, 23, 23);
            alarm[0] = 8;
        }
    } else {
        if (bet(image_index, 4, 5) || bet(image_index, 11, 12)) {
            hspd += (0 - hspd) * 0.30;
        }
        hspd += (mspd - hspd) * 0.05;
    }
}

image_speed = 0.15 + abs(hspd / 8)

if (hp &lt; 0.9) {
    instance_destroy();
    repeat(30) instance_create(x, y, part);
    repeat(loot) instance_create(x, y, obj_coin);
}

image_xscale = sign(hspd);


var n = instance_nearest(x, y, part_smoke);

if (distance_to_object(n) &lt; 3 &amp;&amp; n.image_index &lt; 3) {
    hp_goal   -= 2 - round(distance_to_object(n) / 2);
    hdam_goal -= 2 - round(distance_to_object(n) / 2);
    dmg_sum   += 2 - round(distance_to_object(n) / 2);
    
    if (!audio_is_playing(snd_hit) &amp;&amp; !audio_is_playing(snd_slash)) {
        audio_emitter_pitch(mainAudio, random_range(0.90, 1.10));
        audio_play_sound_on(mainAudio, snd_hit, false, 1);
        audio_play_sound_on(mainAudio, snd_slash, false, 1);
    }
    
}

////////////////
// Collisions //
////////////////

// Horizontal Collisions
if (place_meeting(x + hspd, y, par_fake)) {
   while (!place_meeting(x + sign(hspd), y, par_fake)) {
        x += sign(hspd);
    }
    hspd = 0;
}

x += round(hspd);

// Vertical Collisions
if (place_meeting(x , y + vspd, par_fake)) {
   while (!place_meeting(x, y + sign(vspd), par_fake)) {
     y += sign(vspd);
    }
    vspd = 0;
}

y += round(vspd);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw the healthbars
draw_self();

if (distance_to_object(obj_player) &lt; 160) {
    a += (1 - a) * 0.25; 
} else {
    a += (0 - a) * 0.25; 
}

draw_sprite_ext(spr_econtainer, 0, x, y - sprite_height + 1, 1,1,0,c_white, a);
draw_sprite_part_ext(spr_ehealth, 1, 0, 0, (sprite_get_width(spr_ehealth) * hdam) / hdam_max, sprite_get_height(spr_ehealth), x - 16 , y - sprite_height,1,1,c_white,a);
draw_sprite_part_ext(spr_ehealth, 0, 0, 0, (sprite_get_width(spr_ehealth) * hp) / hp_max, sprite_get_height(spr_ehealth), x - 16, y - sprite_height,1,1,c_white,a);

draw_set_font(fnt_game);
if (dmg_sum &gt; 0) draw_text_colour(x - 18, y - sprite_height * 1.5, dmg_sum, c_white, c_white, c_white, c_white, a);

if (keyboard_check_pressed(ord('W'))) {
    hp_goal += 5;
    hdam_goal += 5;
}

hp += (hp_goal - hp) * 0.15;

if (hp - hp_goal &lt;= 0.001) {
    hdam += (hdam_goal - hdam) * 0.25;
}

if (hp - hp_goal &lt;= 0) {
    dmg_sum = 0;
}

// Set variable limits
if (hp_goal &lt; 0) hp_goal = 0;
if (hdam_goal &lt; 0) hdam_goal = 0;
if (hp_goal &gt; hp_max) hp_goal = hp_max;
if (hdam_goal &gt; hp_max) hdam_goal = hp_max;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
